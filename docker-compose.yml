version: '3.8'

services: 
 # PostgreSQL
  db:
    image: postgres:16
    container_name: sisnot-postgres-db
    environment:
      POSTGRES_DB: Sisnot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - ./Sisnot-back2/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Sisnot"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

 # BACKEND
  backend:
    build: ./Sisnot-back2/Sisnot 
    container_name: sisnot-backend
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/Sisnot 
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

 # API _ GATEWAY 
  api-gateway: 
    build: ./Sisnot-back2/API-GATEWAY
    container_name: sisnot-api-gateway
    ports:
      - "8080:8080"
    environment:
      SISNOT_SERVICE_URI: http://backend:8081
    
    depends_on:
      backend:
        condition: service_started 
    
# FRONTEND
  frontend: 
    build: ./SisnotFront 
    container_name: sisnot-frontend
    ports:
     - "4200:4200"
    environment:
      REACT_APP_API_URL: http://api-gateway:8080 
    depends_on:
      api-gateway:
        condition: service_started 
    restart: unless-stopped